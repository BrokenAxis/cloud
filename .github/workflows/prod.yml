name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to production"
        required: false
        default: false
        type: boolean

jobs:
  terraform:
    name: Setup Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Initialize Terraform
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_API }}

      - name: Validate Terraform
        run: terraform validate
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_API }}

  plan:
    name: Plan Terraform
    runs-on: ubuntu-latest
    needs: terraform
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Initialize Terraform
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_API }}

      - name: Plan Terraform
        run: terraform plan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_API }}

  apply:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Initialize Terraform
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_API }}

      - name: Apply Terraform
        run: terraform apply -auto-approve
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'
